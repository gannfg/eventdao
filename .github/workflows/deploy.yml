name: Deploy EventDAO

# PAUSED - Auto deployment disabled
# Uncomment the lines below to re-enable auto deployment
# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# Temporary override to disable workflow
on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install all dependencies
      run: |
        npm ci
        
    - name: Build shared package
      run: |
        npm run build:shared
        
    - name: Build Frontend
      run: |
        npm run build:frontend
        
    - name: Build Backend
      run: |
        npm run build:backend
        
    - name: Run Tests (Frontend)
      run: |
        npm run lint:frontend
        
    - name: Run Tests (Backend)
      run: |
        npm run lint:backend
        
    - name: Check if Vercel deployment should run
      id: should-deploy-vercel
      run: |
        echo "Checking Vercel secrets..."
        echo "VERCEL_TOKEN length: ${#VERCEL_TOKEN}"
        echo "ORG_ID: $ORG_ID"
        echo "PROJECT_ID: $PROJECT_ID"
        
        if [ -n "$VERCEL_TOKEN" ] && [ -n "$ORG_ID" ] && [ -n "$PROJECT_ID" ]; then
          echo "✅ All Vercel secrets are configured"
          echo "should-deploy=true" >> $GITHUB_OUTPUT
        else
          echo "❌ Missing Vercel secrets - skipping deployment"
          echo "should-deploy=false" >> $GITHUB_OUTPUT
        fi
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        ORG_ID: ${{ secrets.ORG_ID }}
        PROJECT_ID: ${{ secrets.PROJECT_ID }}
        
    - name: Install Vercel CLI
      if: steps.should-deploy-vercel.outputs.should-deploy == 'true'
      run: npm install -g vercel@latest
      
    - name: Deploy to Vercel (Frontend)
      if: steps.should-deploy-vercel.outputs.should-deploy == 'true'
      run: |
        cd frontend
        vercel --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.ORG_ID }} --prod --yes
      env:
        VERCEL_ORG_ID: ${{ secrets.ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.PROJECT_ID }}
      continue-on-error: true
        
    - name: Skip Vercel deployment
      if: steps.should-deploy-vercel.outputs.should-deploy == 'false'
      run: |
        echo "Skipping Vercel deployment due to missing secrets."
        echo "Please configure VERCEL_TOKEN, ORG_ID, and PROJECT_ID secrets in your GitHub repository settings."
        
    - name: Deploy to Railway (Backend)
      run: |
        echo "Backend deployment would go here"
        echo "Configure Railway deployment in your Railway dashboard"
