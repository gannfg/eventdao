name: Deploy EventDAO

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Check Shell Environment
      shell: bash
      run: |
        echo "Shell check:"
        which bash
        which sh
        ls -la /bin/sh
        echo "Node version:"
        node --version
        echo "NPM version:"
        npm --version
        
    - name: Install dependencies (Frontend)
      shell: bash
      run: |
        cd frontend
        npm ci
        
    - name: Install dependencies (Backend)
      shell: bash
      run: |
        cd backend
        npm ci
        
    - name: Build Frontend
      shell: bash
      run: |
        cd frontend
        npm run build
      env:
        PATH: ${{ github.workspace }}/frontend/node_modules/.bin:$PATH
        
    - name: Verify Frontend Build
      shell: bash
      run: |
        cd frontend
        ls -la .next/
        echo "Build artifacts created successfully"
        
    - name: Build Backend
      shell: bash
      run: |
        cd backend
        npm run build
        
    - name: Run Tests (Frontend)
      shell: bash
      run: |
        cd frontend
        npm run lint
        
    - name: Run Tests (Backend)
      shell: bash
      run: |
        cd backend
        npm run lint
        
    - name: Check if Vercel deployment should run
      id: should-deploy-vercel
      shell: bash
      run: |
        if [ -n "$VERCEL_TOKEN" ] && [ -n "$ORG_ID" ] && [ -n "$PROJECT_ID" ]; then
          echo "should-deploy=true" >> $GITHUB_OUTPUT
        else
          echo "should-deploy=false" >> $GITHUB_OUTPUT
        fi
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN || '' }}
        ORG_ID: ${{ secrets.ORG_ID || '' }}
        PROJECT_ID: ${{ secrets.PROJECT_ID || '' }}
        
    - name: Deploy to Vercel (Frontend)
      if: steps.should-deploy-vercel.outputs.should-deploy == 'true'
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID }}
        working-directory: ./frontend
        vercel-args: '--prod'
        scope: ${{ secrets.ORG_ID }}
        
    - name: Skip Vercel deployment
      if: steps.should-deploy-vercel.outputs.should-deploy == 'false'
      shell: bash
      run: |
        echo "Skipping Vercel deployment due to missing secrets."
        echo "Please configure VERCEL_TOKEN, ORG_ID, and PROJECT_ID secrets in your GitHub repository settings."
        
    - name: Deploy to Railway (Backend)
      shell: bash
      run: |
        echo "Backend deployment would go here"
        echo "Configure Railway deployment in your Railway dashboard"
